[build-system]
requires = ["setuptools>=45", "wheel", "setuptools_scm[toml]>=6.0"]
build-backend = "setuptools.build_meta"

[project]
name = "pangeo-forge-recipes"
dynamic = ["version"]
requires-python = ">=3.11"
description = "Pipeline tools for building and publishing analysis ready datasets."
readme = "README.md"
authors = [
  { name = "Ryan Abernathey", email = "rpa@ldeo.columbia.edu" },
]
classifiers = [
  "Development Status :: 1 - Planning",
  "License :: OSI Approved :: Apache Software License",
  "Operating System :: OS Independent",
  "Intended Audience :: Science/Research",
  "Programming Language :: Python",
  "Programming Language :: Python :: 3",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
  "Topic :: Scientific/Engineering",
]
license = { text = "Apache-2.0" }
keywords = ["pangeo", "data"]
dependencies = [
  "apache-beam>=2.53",
  "cftime",
  "dask",
  "fastparquet",
  "fsspec[http]",
  "h5netcdf",
  "h5py",
  "kerchunk>=0.2.8",
  "netcdf4",
  "numcodecs",
  "xarray>=2025.1.1",
  "zarr>=3.0.0",
]

[project.optional-dependencies]
test = [
  "click",
  "pytest<8.0.0",
  "pytest-cov",
  "pytest-xdist",
  "pytest-lazy-fixtures",
  "pytest-sugar",
  "pytest-timeout",
  "pytest-reportlog",
  "pytest-asyncio",
  "s3fs",
  "gcsfs",
  "scipy",
]

minio = [
  "docker",
]

[project.urls]
Homepage = "https://github.com/pangeo-forge/pangeo-forge-recipes"
Tracker = "https://github.com/pangeo-forge/pangeo-forge-recipes/issues"
Documentation = "https://pangeo-forge.readthedocs.io/en/latest/"

[tool.setuptools_scm]
write_to = "pangeo_forge_recipes/_version.py"
write_to_template = "__version__ = '{version}'"

[tool.setuptools.packages.find]
exclude = ["docs_src"]

[tool.setuptools.package-data]
pangeo_forge_recipes = ["py.typed"]

[tool.black]
line-length = 100

[tool.ruff]
target-version = "py310"
builtins = ["ellipsis"]
exclude = [".git", ".eggs", "build", "dist", "__pycache__"]
line-length = 100

[tool.ruff.lint]
ignore = [
  "E402",  # module level import not at top of file
  "E501",  # line too long - let black worry about that
  "E731",  # do not assign a lambda expression, use a def
  "UP038", # type union instead of tuple for isinstance etc
]
per-file-ignores = { "examples/runner-config/local.py" = ["F821"] }
select = [
  "F", # Pyflakes
  "E", # Pycodestyle
  "I", # isort
  # "UP",  # Pyupgrade
  # "TID", # flake8-tidy-imports
  "W",
]
# extend-safe-fixes = [
#   "TID252", # absolute imports
# ]
fixable = ["I"]

[tool.ruff.lint.isort]
known-first-party = ["pangeo_forge_recipes"]
combine-as-imports = true

[tool.ruff.lint.flake8-tidy-imports]
# Disallow all relative imports.
ban-relative-imports = "all"

[tool.pytest.ini_options]
log_cli = false
timeout = 30
timeout_method = "signal"

[project.entry-points."pangeo_forge_runner.injection_specs"]
default_injections = "pangeo_forge_recipes.injections:get_injection_specs"
