name: Tests

on:
  push:
    branches: "*"
    paths-ignore:
    - 'docs/**'
  pull_request:
    branches: master
    paths-ignore:
    - 'docs/**'

env:
  PYTEST_ADDOPTS: "--color=yes"

jobs:
  test:
    name: ${{ matrix.python-version }}-build
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: [3.8, 3.9]
    steps:
      - uses: actions/checkout@v2
      - name: Setup Python
        uses: actions/setup-python@v1
        with:
          python-version: ${{ matrix.python-version }}
          architecture: x64
      - name: Cache conda
        uses: actions/cache@v1
        env:
          # Increase this value to reset cache if ci/py${{ matrix.python-version }}.yml has not changed
          CACHE_NUMBER: 0
        with:
          path: ~/conda_pkgs_dir
          key: ${{ runner.os }}-conda-${{ env.CACHE_NUMBER }}-${{ hashFiles('ci/py${{ matrix.python-version }}.yml') }}
      - name: setup miniconda
        uses: conda-incubator/setup-miniconda@v2
        with:
          activate-environment: pangeo-forge-recipes
          environment-file: ci/py${{ matrix.python-version }}.yml
          python-version: ${{ matrix.python-version }}
          auto-activate-base: false
          use-only-tar-bz2: true
      - name: print conda env
        shell: bash -l {0}
        run: |
          conda info
          conda list
      - name: install pangeo-forge-recipes
        shell: bash -l {0}
        run: |
          python -m pip install --no-deps -e  .
      - name: Run Tests
        shell: bash -l {0}
        run: |
          py.test tests -v --redirect-dask-worker-logs-to-stdout=DEBUG \
            --cov=pangeo_forge_recipes --cov-config .coveragerc \
            --cov-report term-missing \
            --cov-report xml \
            --durations=10 --durations-min=1.0
      - name: Codecov
        uses: codecov/codecov-action@v2.0.2
        with:
          file: ./coverage.xml
          env_vars: OS,PYTHON
          name: codecov-umbrella
          fail_ci_if_error: false
